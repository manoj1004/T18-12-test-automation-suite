<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="172351" started-at="2018-12-30T01:12:15Z" finished-at="2018-12-30T01:15:07Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="172351" started-at="2018-12-30T01:12:15Z" finished-at="2018-12-30T01:15:07Z">
      <class name="AutoRunner">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:AutoRunner@1794d431]" name="beforeTest" is-config="true" duration-ms="2672" started-at="2018-12-30T01:12:15Z" finished-at="2018-12-30T01:12:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:AutoRunner@1794d431]" name="beforeClass" is-config="true" duration-ms="3357" started-at="2018-12-30T01:12:17Z" finished-at="2018-12-30T01:12:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:AutoRunner@1794d431]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-12-30T01:12:21Z" finished-at="2018-12-30T01:12:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="TestCase1()[pri:0, instance:AutoRunner@1794d431]" name="TestCase1" duration-ms="35249" started-at="2018-12-30T01:12:21Z" finished-at="2018-12-30T01:12:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Sorting Z-A doesnt work expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Sorting Z-A doesnt work expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at AutoRunner.TestCase1(AutoRunner.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:AutoRunner@1794d431]" name="afterMethod" is-config="true" duration-ms="2282" started-at="2018-12-30T01:12:56Z" finished-at="2018-12-30T01:12:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCase1 status=FAILURE method=AutoRunner.TestCase1()[pri:0, instance:AutoRunner@1794d431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="TestCase2()[pri:0, instance:AutoRunner@1794d431]" name="TestCase2" duration-ms="58821" started-at="2018-12-30T01:12:58Z" finished-at="2018-12-30T01:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:AutoRunner@1794d431]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-12-30T01:12:58Z" finished-at="2018-12-30T01:12:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:AutoRunner@1794d431]" name="afterMethod" is-config="true" duration-ms="2096" started-at="2018-12-30T01:13:57Z" finished-at="2018-12-30T01:13:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCase2 status=SUCCESS method=AutoRunner.TestCase2()[pri:0, instance:AutoRunner@1794d431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:AutoRunner@1794d431]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-12-30T01:13:59Z" finished-at="2018-12-30T01:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestCase3()[pri:0, instance:AutoRunner@1794d431]" name="TestCase3" duration-ms="12986" started-at="2018-12-30T01:13:59Z" finished-at="2018-12-30T01:14:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase3 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:AutoRunner@1794d431]" name="afterMethod" is-config="true" duration-ms="2099" started-at="2018-12-30T01:14:12Z" finished-at="2018-12-30T01:14:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCase3 status=SUCCESS method=AutoRunner.TestCase3()[pri:0, instance:AutoRunner@1794d431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="TestCase4()[pri:0, instance:AutoRunner@1794d431]" name="TestCase4" duration-ms="24495" started-at="2018-12-30T01:14:14Z" finished-at="2018-12-30T01:14:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:AutoRunner@1794d431]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-12-30T01:14:14Z" finished-at="2018-12-30T01:14:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:AutoRunner@1794d431]" name="afterMethod" is-config="true" duration-ms="2102" started-at="2018-12-30T01:14:39Z" finished-at="2018-12-30T01:14:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCase4 status=SUCCESS method=AutoRunner.TestCase4()[pri:0, instance:AutoRunner@1794d431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:AutoRunner@1794d431]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-12-30T01:14:41Z" finished-at="2018-12-30T01:14:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestCase5()[pri:0, instance:AutoRunner@1794d431]" name="TestCase5" duration-ms="15403" started-at="2018-12-30T01:14:41Z" finished-at="2018-12-30T01:14:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase5 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:AutoRunner@1794d431]" name="afterMethod" is-config="true" duration-ms="2090" started-at="2018-12-30T01:14:56Z" finished-at="2018-12-30T01:14:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCase5 status=SUCCESS method=AutoRunner.TestCase5()[pri:0, instance:AutoRunner@1794d431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:AutoRunner@1794d431]" name="afterClass" is-config="true" duration-ms="8286" started-at="2018-12-30T01:14:58Z" finished-at="2018-12-30T01:15:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:AutoRunner@1794d431]" name="afterTest" is-config="true" duration-ms="385" started-at="2018-12-30T01:15:07Z" finished-at="2018-12-30T01:15:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- AutoRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
